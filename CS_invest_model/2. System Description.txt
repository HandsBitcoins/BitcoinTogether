전체 시스템은 현재

네 개의 객체하고 두 개의 데이터 베이스로 생각중입니다. 두 개가 필요할진 의문이지만... 하나면 될 거 같지만...

통계학자 - 통계용 DB
내부 거래자 - 잔고 DB
외부 거래자
예언가

- 통계학자
매도호가, 매수호가 데이터를 받아와서
떨어졌을 때 낙폭을 인지하고 낙폭의 평균 구하고 표준편차를 구합니다.
그리고 내부 거래자에게 연락을 해서 매도를 하게끔 합니다.
매수호가는 항상 내부 거래자에게 전합니다.

- 통계용 DB
이게 없어도 되는지 모르겠네요....
낙폭의 평균하고 낙폭의 표준편차를 구하기 위해서 기록을 다 해야할 건데
시간이 갈수록 DB가 커지면 응답속도가 늦어질거고 
차라리 다른 통계적 방법으로 이거 없이 평균을 낼수 있는 방법을 알아내야할거 같은 기분입니다.

- 내부 거래자 
구매자, 판매자로 쪼갤지는 의문인 상태입니다.. 
만약 스레드로 해서 전체가 돌아가게 한다면 필요하지만 
제가 봤을때는 이거 그냥 순차로 줄줄이 돌릴거 같아서...

따로 설명하자면
- 구매자
구매자는 낙폭이 생겼을 때 피크값, 낙폭의 크기, 평균, 표준편차를 받아서
매수+매도에 따른 수수료를 제일 낮은 블럭(20%)의 수익으로 다 해결 가능한지를 체크합니다.
만약 가능하다면 모델에 따른 예상값과 구매량을 계산한 뒤 매도호가에 구매합니다.
그리고 잔고 DB에 기록합니다.
구매량과 구매가를 외부거래자에게 넘깁니다.

-판매자
판매자는 매수호가 이하인 판매가를 DB에서 모두 조회해서 팝니다.
양을 합산하고 매수호가를 외부거래자에게 전달합니다.
그리고 DB를 갱신합니다.
잔고를 파기하거나 판매가와 판매량을 갱신합니다.

- 잔고 DB
내부 거래자용 입니다.
다른 건 없습니다.
구성은
잔고번호, 산 양, 산가격, 기대가격, 현재 스텝(0-4), 다음 판매량, 팔 가격
으로 이루어져있습니다.

- 외부 거래자
외부 거래자는 실제로 시장과 거래를 하는 객체입니다.
왜 내부와 외부가 따로 존재하냐면
이게 구매자가 사면서 판매자가 동시에 팔 수 있는데 그렇게 되면 수수료를 두 번이나 무는 병신짓을 하기 때문입니다.
또 하나 더 있습니다. 이미 넣은 매도매수에 대해서도 정리를 해야하기 때문입니다.

외부 거래자는
내부거래자의 매도매수가 없으면 바로 종료.
있으면
일단 미수거래가 있는지 조회를 해서 있으면
캔슬을 날리고

모든 매수호가*팔양의 합과 모든 매도호가*살양의 합을 비교해서 
살 게 많으면 차이액/매도호가 만큼을 매도호가에 사고
팔 게 많으면 차이액/매수호가 만큼을 매수호가에 팝니다.

내부 잔고 DB는 굉장히 많이 바뀌었겠지만, 실제로는 외부적으로는 거의 안 바뀐거죠.
그리고 이 로직에 따르면 주문은 1개 밖에 존재할 수가 없습니다.

- 예언가 
추후 구현예정. 지금은 일단 있는 척만 하려는 생각중입니다. 
예측이 들어갈 여지가 전혀없는 이 모델에서 무슨 역할을 할 수 있을지는 의문이지만... 
제가 연구하고 있는 분야이니깐...


전 과정은

통계학자 -> 내부구매자 -> 외부구매자 순을 반복합니다.
각자를 스레드로 만들어서 스레드 통신을 할 수도 있겠지만...
일단은 간단하게 그냥 순차로 돌릴 생각입니다.
그렇게까지 동시성을 필요로 하는 일로도 안 보이구요.